@model TesisMarco.DTO.EntidadPuntaje

@{
    Layout = "_Layout";
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<br />

<h1>Gráficos de Puntajes por Categoría</h1>
<div class="row">
    <div class="col-md-6">
        @Html.DropDownList("IdEntidad", ViewBag.Entidades as SelectList, "Seleccione...", new { @class = "form-control" })
    </div>
</div>
<br />
<br />
<p id="nombreEntidad">@ViewBag.NombreEntidad</p>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <canvas id="chartPastel" class="grafica" width="400" height="400"></canvas>
        </div>
        <div class="col-md-6">
            <canvas id="chartBarras" class="grafica" width="400" height="400"></canvas>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <canvas id="chartLineas" class="grafica" width="400" height="400"></canvas>
        </div>
    </div>
</div>

<script>// Datos del JSON



    var datos = @Html.Raw(Json.Serialize(Model));
    llenarDatos(datos, true);



    function llenarDatos(datos, inicio) {


        if (inicio != true) {

            // Limpiar gráficos existentes
            if (window.chartPastel) {
                window.chartPastel.destroy();
            }
            if (window.chartBarras) {
                window.chartBarras.destroy();
            }
            if (window.chartLineas) {
                window.chartLineas.destroy();
            }
        }


        var opciones = {
            responsive: false
        };


        // Datos para el gráfico de pastel
        var ctxPastel = document.getElementById('chartPastel').getContext('2d');
        var labelsPastel = datos.puntajes.map(function (item) {
            return item.categoria;
        });
        var valoresPastel = datos.puntajes.map(function (item) {
            return item.valor;
        });

        window.chartPastel = new Chart(ctxPastel, {
            type: 'pie',
            data: {
                labels: labelsPastel,
                datasets: [{
                    label: 'Puntajes por Categoría',
                    data: valoresPastel,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(54, 162, 235, 0.5)',
                        'rgba(255, 206, 86, 0.5)',
                        'rgba(75, 192, 192, 0.5)',
                        'rgba(153, 102, 255, 0.5)',
                        'rgba(255, 159, 64, 0.5)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: false
            }
        });

        // Datos para el gráfico de barras
        var ctxBarras = document.getElementById('chartBarras').getContext('2d');
        var labelsBarras = datos.puntajes.map(function (item) {
            return item.categoria;
        });
        var valoresBarras = datos.puntajes.map(function (item) {
            return item.valor;
        });

        window.chartBarras = new Chart(ctxBarras, {
            type: 'bar',
            data: {
                labels: labelsBarras,
                datasets: [{
                    label: 'Puntajes por Categoría',
                    data: valoresBarras,
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Datos para el gráfico de líneas
        var ctxLineas = document.getElementById('chartLineas').getContext('2d');
        var labelsLineas = datos.puntajes.map(function (item) {
            return item.categoria;
        });
        var valoresLineas = datos.puntajes.map(function (item) {
            return item.valor;
        });

        window.chartLineas = new Chart(ctxLineas, {
            type: 'line',
            data: {
                labels: labelsLineas,
                datasets: [{
                    label: 'Puntajes por Categoría',
                    data: valoresLineas,
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: opciones
            }
        });
    }


    $("#IdEntidad").change(function () {
        debugger;
        var valor = $(this).val();
        var texto = $(this).find("option:selected").text();

        if (valor && valor.length > 0) {

            $.ajax({
                url: '@Url.Action("ObtenerPuntaje", "DashBoard")',
                dataType: 'json',
                data: { idEntidad: valor },

                success: function (result) {
                    debugger;
                    // Manejar la respuesta exitosa aquí

                    $("#nombreEntidad").html(texto);

                    llenarDatos(result, false);

                    console.log(result);
                },
                error: function (xhr, status, error) {
                    debugger;
                    // Manejar errores aquí
                    console.error(xhr.responseText);
                }
            });
        }

    });

</script>
